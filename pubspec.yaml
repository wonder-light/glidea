name: glidea
description: "Glidea 一个静态博客写作客户端"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.4

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  # flutter icons: https://fluttericon.cn/
  # cupertino_icons: ^1.0.8
  # iconify_flutter: ^0.0.7     # https://andronasef.github.io/iconify_flutter/
  phosphor_flutter: ^2.1.0    # https://phosphoricons.com/
  get: ^5.0.0-release-candidate-9.2.1
  dio: ^5.7.0
  path: ^1.9.1
  path_provider: ^2.1.5
  logger: ^2.5.0
  responsive_framework: ^1.5.1
  image: ^4.5.2
  upgrader: ^11.3.1           # TODO: 升级
  markdown: ^7.2.2            # 一个用 Dart 编写的可移植 Markdown 库
  flutter_markdown: ^0.7.5
  flutter_markdown_latex: ^0.3.4
  dart_json_mapper: ^2.2.14
  flex_color_scheme: ^8.0.1
  url_launcher: ^6.3.1
  uuid: ^4.5.1
  flex_color_picker: ^3.7.0
  file_picker: ^8.1.7
  package_info_plus: ^8.1.2
  crypto: ^3.0.6
  convert: ^3.1.2
  shelf: ^1.4.2
  shelf_static: ^1.1.3
  intl: ^0.19.0
  emoji_picker_flutter: ^4.2.0
  omni_datetime_picker: ^2.0.5
  collection: ^1.19.0
  elegant_notification: ^2.4.1
  window_manager: ^0.4.3
  archive: ^4.0.2
  dartssh2: ^2.11.0
  jinja: ^0.6.0
  xml: ^6.5.0
  process_runner: ^4.2.0
  re_editor: ^0.6.0
  re_highlight: ^0.0.3
  permission_handler: ^11.3.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  integration_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  icons_launcher: ^3.0.0
  mockito: ^5.4.5
  build_runner: ^2.4.13
  flutter_native_splash: ^2.4.4
  device_preview_plus: ^2.2.3

dependency_overrides:
  path: ^1.9.1
  meta: ^1.16.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
    - assets/images/
    - assets/public/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package

# 应用图标
# dart run icons_launcher:create
icons_launcher:
  image_path: "docs/assets/images/glidea.png"
  platforms:
    android:
      enable: true
    ios:
      enable: true
    linux:
      enable: false
    macos:
      enable: true
    web:
      enable: true
    windows:
      enable: true

# 应用闪屏页
# dart run flutter_native_splash:create
flutter_native_splash:
  color: "#ffffff"
  color_dark: "#121212"
  image: "docs/assets/images/glidea-splash.png"
  image_dark: "docs/assets/images/glidea-splash.png"
  android_12:
    color: "#ffffff"
    color_dark: "#121212"
    image: "docs/assets/images/glidea-splash.png"
    image_dark: "docs/assets/images/glidea-splash.png"
  android: true
  ios: true
  web: true
  fullscreen: true

# 构建 build
# dart run build_runner build --delete-conflicting-outputs
# dart run build_runner watch --delete-conflicting-outputs
targets:
  $default:
    builders:
      # 这一部分配置 dart_json_mapper 生成器
      dart_json_mapper:
        options:
          # 默认为 List, Set, 当你想为其他可迭代对象（如 HashSet<Car>, UnmodifiableListView<Car> ）提供一个实例化支持时，你可以将它们添加到这个选项的列表中
          iterables: List, Set, Map, HashSet, UnmodifiableListView
        generate_for:
          - lib/**/*.dart

      # 这部分需要告诉原始的可反射构建器远离它，它将可反射构建器的默认选项覆盖为一组空文件
      reflectable:
        generate_for:
          - no/files

# 生成文档
# dart doc --output=docs/api
#
# 查看文档
# dart pub global activate dhttpd
# dart pub global run dhttpd --path doc/api   ->    http://localhost:8080

# 打包
# Android: flutter build apk --release   合并所有架构, 兼容好
#          flutter build apk --split-per-abi [--target-platform android-arm,android-arm64,android-x64]   分开打包, 体积小
#          flutter build apk --release --obfuscate --split-debug-info=P:/glidea/build/info   使用混淆进行打包, 可以减少一点体积
#          flutter build appbundle --release  aab 安装包
# windows: flutter build windows --release [--analyze-size]
#          dart run msix:create 需要安装 MSIX, flutter pub add --dev msix
#          使用 Inno 打包 https://medium.com/@fluttergems/packaging-and-distributing-flutter-desktop-apps-the-missing-guide-part-2-windows-0b468d5e9e70